{
	"version": 3,
	"file": "main.css",
	"sources": [
		"main.scss",
		"_sass/_global.scss",
		"_sass/_mq.scss",
		"_sass/_sidebarnav.scss",
		"_sass/_nav.scss",
		"_sass/_content.scss"
	],
	"sourcesContent": [
		"@charset \"utf-8\";\n@import \"global\";\n@import \"sidebarnav\";\n@import \"nav\";\n@import \"mq\";\n@import \"content\";",
		"// Colors\n$bodyfont: \"IBM Plex Sans\", \"Open Sans\", sans-serif;\n$hwblue: #2B5DB7;\n$hwgrey: #22222D;\n$darkgrey: #3b4049;\n$hwlightgrey: #f0f0f0;\n$borderradius: 0.5rem;\n$elementshadow:\n0 0.3px 0.3px rgba(0, 0, 0, 0.004),\n0 0.6px 0.6px rgba(0, 0, 0, 0.012),\n0 0.9px 0.9px rgba(0, 0, 0, 0.022),\n0 1.2px 1.4px rgba(0, 0, 0, 0.032),\n0 1.6px 1.9px rgba(0, 0, 0, 0.04),\n0 2.2px 2.6px rgba(0, 0, 0, 0.048),\n0 3.2px 3.6px rgba(0, 0, 0, 0.053),\n0 5.2px 5.1px rgba(0, 0, 0, 0.057),\n0 9.5px 7.8px rgba(0, 0, 0, 0.059),\n0 25px 19px rgba(0, 0, 0, 0.06);\n$minorelementshadow: rgba(0, 0, 0, 0.2) 0px 2px 4px 0px;\n\n// Apply a natural box layout model to all elements, but allowing components to change\n\nhtml {\n  box-sizing: border-box;\n}\n*, *:before, *:after {\n  box-sizing: inherit;\n}\nbody {\n  margin: 0;\n  padding: 0;\n  background-color: $hwlightgrey;\n}\n\n// Global settings\n\n@import 'mq';\n\nbody {\n  font-family: $bodyfont;\n  // It's bad to set this in pixels becuase that overrides users who change their default sizing, font-size is instead set to a relative percentage of all browser's default size of 16px\n  font-size: 100%;\n}\n\n// _mq.scss media query settings\n\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px\n);\n\n// Page content wrapper, applies to everything below the nav and above the footer!\n\n.wrapper {\n  min-height: 80vh;\n  width: 100%;\n  padding-top: 4rem;\n}\n\n// Standard layout elements\n\n.stdsection {\n  display: flex;\n  justify-content: center;\n}\n\n.section-container {\n  padding: 0px 1rem 0 1rem;\n  max-width: 1340px;\n  width: 100%;\n}\n\n.main-section-grid {\n  margin-top: 4.6rem;\n  display: grid;\n  grid-template-columns: 0.4fr 1.6fr;\n  grid-column-gap: 1.2rem;\n}\n\n@include mq($from: mobile, $until: tablet) {\n  .main-section-grid {\n    grid-template-columns: 1fr;\n    grid-template-rows: auto;\n  }\n}\n\n// Typography\n\n//Apply this class to specific text that you want to break in specific places when the page is resized\n.word-wrap-section {\n  display: block;\n}\n\n.center-text {\n  text-align: center;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.h1 {\n  font-size: calc(max(min(4.5vw, 4.4rem), 3.4rem));\n  font-variation-settings: 'wght' 700;\n  margin-top: 0;\n  margin-bottom: 1rem;\n}\n\n.hero-subheader {\n  font-size: calc(max(min(2vw, 1.7rem), 1.5rem));\n  font-variation-settings: 'wght' 550;\n  margin-top: 0;\n  margin-bottom: 2.5rem;\n}\n\n.h2 {\n  margin-top: 0;\n  font-size: 2.625rem;\n  font-variation-settings: 'wght' 700;\n  color: transparent;\n  background-clip: text;\n  -webkit-background-clip: text;\n  width: -moz-fit-content;\n  width: fit-content;\n}\n\n.h3 {\n  font-size: 1.875rem;\n  font-variation-settings: 'wght' 700;\n  margin-top: 0;\n}\n\n.h4 {\n  font-size: 1.25rem;\n  font-variation-settings: 'wght' 700;\n  margin-top: 0;\n  margin-bottom: 1rem;\n}\n\n.p-body {\n  font-size: 1.125rem;\n  font-variation-settings: 'wght' 450;\n  line-height: 1.5rem;\n}\n\n.p-small {\n  font-size: 1rem;\n  font-variation-settings: 'wght' 450;\n  line-height: 1.4rem;\n}\n\n",
		"@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n///\n/// Do not override this value, or things will break\n///\n/// @link https://github.com/sass-mq/sass-mq/issues/122\n/// @deprecated This setting will be removed in sass-mq v6.0.0\n/// @access private\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (such as the layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width. For example: (mobile, tablet, desktop).\n///\n/// @example scss\n///   $mq-show-breakpoints: (mobile, tablet, desktop);\n///   @import 'path/to/mq';\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (for example: `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @ignore @param {Number} $base-font-size [$mq-base-font-size] - `<body>` font size (deprecated)\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if ($mq-base-font-size != 16px) {\n        @warn \"Overriding $mq-base-font-size will break things, see https://github.com/sass-mq/sass-mq/issues/122.\";\n    }\n    @if ($base-font-size != 16px) {\n        @warn \"The $base-font-size argument will be removed in sass-mq v6.0.0, as overriding it breaks things, see https://github.com/sass-mq/sass-mq/issues/122.\";\n    }\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from [false] - One of $mq-breakpoints\n/// @param {String | Boolean} $until [false] - One of $mq-breakpoints\n/// @param {String | Boolean} $and [false] - Additional media query parameters\n/// @param {String} $media-type [$mq-media-type] - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints [$mq-breakpoints]\n/// @ignore @param {String} $static-breakpoint [$mq-static-breakpoint]\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n            and $media-type != 'print'\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _mq-quick-sort($list) {\n    $less:  ();\n    $equal: ();\n    $large: ();\n\n    @if length($list) > 1 {\n        $seed: nth($list, ceil(length($list) / 2));\n\n        @each $item in $list {\n            @if ($item == $seed) {\n                $equal: append($equal, $item);\n            } @else if ($item < $seed) {\n                $less: append($less, $item);\n            } @else if ($item > $seed) {\n                $large: append($large, $item);\n            }\n        }\n\n        @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large));\n    }\n\n    @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _mq-map-sort-by-value($map) {\n    $map-sorted: ();\n    $map-keys: map-keys($map);\n    $map-values: map-values($map);\n    $map-values-sorted: _mq-quick-sort($map-values);\n\n    // Reorder key/value pairs based on key values\n    @each $value in $map-values-sorted {\n        $index: index($map-values, $value);\n        $key: nth($map-keys, $index);\n        $map-sorted: map-merge($map-sorted, ($key: $value));\n\n        // Unset the value in $map-values to prevent the loop\n        // from finding the same index twice\n        $map-values: set-nth($map-values, $index, 0);\n    }\n\n    @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n    $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints [$mq-show-breakpoints] - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints [$mq-breakpoints] - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n",
		".sidebarnav-title-container {\n  border-style: none;\n  background-color: inherit;\n  text-align: left;\n  width: 100%;\n  padding: 1rem;\n  display: flex;\n  justify-content: space-between;\n\n  .sidebarnav-title {\n    // position: static;\n    // z-index: -2;\n    margin-top: 0;\n    font-size: 1.8rem;\n    text-decoration: none;\n    color: black;\n    font-family: $bodyfont;\n  }\n}\n\n.sidebarnav-container {\n  position: fixed;\n  width: 12rem;\n  transition: .1s ease-in-out;\n}\n\n@include mq($from: mobile, $until: tablet) {\n\n  @media (hover: hover) {\n    .sidebarnav-title-container:hover {\n      background-color: $hwblue;\n      border-radius: $borderradius;\n      transform: scale(1.02) translate(0, -2px);\n      box-shadow: $elementshadow;\n      transition: .1s ease-in-out;\n    }\n  }\n\n  .sidebar-collapsible:after {\n    content: \"\\2193\"; /* Unicode character for \"plus\" sign (+) */\n    font-size: 1rem;\n    float: right;\n    position: relative;\n    padding-right: 0.5rem;\n    // top: 0.2rem;\n    color: $hwlightgrey !important;\n    text-align: center;\n    font-size: 1.2rem;\n    font-weight: 600;\n  }\n\n  .sidebar-collapsible-active:after {\n    content: \"–\"; /* Unicode character for \"minus\" sign (-) */\n  }\n\n  .sidebarnav-title-container {\n    cursor: pointer;\n  }\n\n  .sidebar-content {\n    overflow: hidden;\n    display: none;\n  }\n\n  .sidebarnav-container {\n    position: relative;\n    width: 100%;\n    border-radius: $borderradius;\n  }\n\n  // remove to place sidebar back on top on mobile\n  .sidebarnav {\n    margin-top: -2rem;\n    margin-bottom: 2rem;\n    background-color: $hwgrey;\n    border-radius: $borderradius;\n    box-shadow: $elementshadow;\n    padding: 0;\n\n    .sidebarnav-title {\n      color: white !important;\n      font-size: 1.2rem !important;\n    }\n\n    .sidebarnav-category {\n      font-size: 1rem;\n    }\n\n    li {\n      color: white;\n    }\n\n    a {\n      color: darken($hwlightgrey, 20) !important;\n    }\n\n    .sidebarnav-link-selected {\n      color: white !important;\n    }\n\n    a:hover {\n      color: darken($hwlightgrey, 35) !important;\n    }\n  }\n}\n\n.sidebarnav {\n  ol {\n    padding-left: 1rem;\n    list-style: none;\n  }\n\n  li {\n    padding-bottom: 0.5rem;\n    padding-left: 0.5rem;\n  }\n\n  a {\n    text-decoration: none;\n    color: black;\n    font-weight: 500;\n    font-size: 1rem;\n  }\n\n  a:hover {\n    color: $hwblue;\n  }\n}\n\n.sidebarnav-category {\n  font-weight: 600;\n  font-size: 1.2rem;\n  margin-top: 1rem;\n  color: $darkgrey;\n}\n\n.sidebarnav-link-indicator {\n  display: block;\n  position: relative;\n  background-color: $hwblue;\n  width: 0.188rem;\n  right: 0.5rem;\n  top: 0.1rem;\n}\n\n.sidebarnav-list-selected {\n  display: flex;\n}\n\n.sidebarnav-link-selected {\n  display: inline-block;\n  position: relative;\n  color: $hwblue !important;\n}\n\n.sidebarnav-iconbox {\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  flex-grow: 1;\n  margin-bottom: 1rem;\n  margin-top: 1rem;\n}\n\n.sidebarnav-iconbox-link {\n  color: black;\n  height: 1.5rem;\n  display: inline;\n  font-size: 1.4rem !important;\n  flex-shrink: 1;\n  vertical-align: middle;\n  transition: .05s ease-in-out;\n}\n\n.sidebarnav-iconbox-link:hover {\n  transform: scale(1.1);\n}",
		".nav {\n  min-height: 3rem;\n  width: 100%;\n  position: fixed;\n  z-index: 100;\n  display: flex;\n  justify-content: center;\n  // Fix for Safari cards clipping through nav\n  transform: translateZ(100px);\n}\n\n.nav-container {\n  max-width: 1340px;\n  width: calc(100% - 1rem);\n  display: flex;\n  justify-content: space-between;\n  background: inherit;\n  background-color: rgba(212, 216, 217, 1);\n  padding: 1rem;\n  margin-top: 0.5rem;\n  border-radius: $borderradius;\n  box-shadow: $elementshadow;\n}\n\n/* if backdrop support:*/\n@supports ((-webkit-backdrop-filter: none) or (backdrop-filter: none)) {\n  .nav-container {\n    background-color: rgba(212, 216, 217, 0.8);\n    -webkit-backdrop-filter: blur(0.5rem);\n    backdrop-filter: blur(0.5rem);\n  }\n}\n\n.nav-logobox {\n  display: flex;\n  align-items: center;\n  align-content: center;\n}\n\n.nav-logo-link {\n  display: block;\n}\n\n.nav-logo {\n  display: block;\n  width: auto;\n  height: 1.5rem;\n  margin-top: 0.5rem;\n  margin-bottom: 0.5rem;\n}\n\n.nav-list {\n  list-style: none;\n  display: inline-flex;\n  justify-content: space-evenly;\n  align-items: center;\n  align-content: center;\n  flex-grow: 5;\n  margin: 0;\n  padding: 0;\n}\n\n.nav-list-item-link {\n  color: $hwgrey;\n  font-family: $bodyfont;\n  font-weight: 700;\n  text-decoration: none;\n}\n\n.nav-list-item-link:hover {\n  color: $hwblue;\n}\n\n.nav-list-item-link::selection {\n  background-color: $hwblue;\n  color: white;\n}\n\n.nav-iconbox {\n  max-width: 310px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-grow: 1;\n}\n\n.nav-iconbox-link {\n  color: black;\n  height: 1.5rem;\n  display: inline;\n  font-size: 1.4rem;\n  flex-shrink: 1;\n  vertical-align: middle;\n  transition: .05s ease-in-out;\n}\n\n.nav-iconbox-link:hover {\n  transform: scale(1.1);\n}\n\n@include mq($from: mobile, $until: tablet) {\n  .nav-iconbox {\n    display: none;\n  }\n}",
		".cover {\n  background-color: $hwblue !important;\n  background-image: url(../img/cover-background.jpg) !important;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n  h1 {\n    color: white;\n    font-size: 4rem;\n    margin-top: 0;\n    margin-bottom: 4rem;\n    text-shadow: 0px 0px 45px #1a479c, 0px 0px 45px #1a479c, 0px 0px 45px #1a479c, 0px 0px 45px #1a479c;\n  }\n\n  h2 {\n    color: white !important;\n    font-size: 2.5rem !important;\n    margin-bottom: 5rem !important;\n    text-shadow: 0px 0px 45px #1a479c, 0px 0px 45px #1a479c, 0px 0px 45px #1a479c, 0px 0px 45px #1a479c;\n  }\n\n  img {\n    width: 100%;\n  }\n\n  p {\n    color: white !important;\n    font-weight: 500 !important;\n    text-shadow: 0px 0px 45px #1a479c, 0px 0px 45px #1a479c, 0px 0px 45px #1a479c, 0px 0px 45px #1a479c;\n  }\n}\n\n.body-container {\n  z-index: 1;\n  margin-bottom: 4rem;\n  background-color: #ffffff;\n  border-radius: 0.375rem;\n  min-height: 80vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  box-shadow: $elementshadow;\n}\n\n.bodycontent {\n  padding: 5vw;\n\n  h2 {\n    margin-top: 0;\n    color: $hwblue;\n    font-size: 3rem;\n  }\n\n  h3 {\n    margin-top: 0;\n    font-size: 1.5rem;\n  }\n\n  h4 {\n    margin-top: 0;\n    font-size: 1.25rem;\n  }\n\n  h5 {\n    margin-top: -1.5rem;\n    color: lighten($hwgrey, 35);\n    font-size: 1.5rem;\n  }\n\n  p {\n    font-size: 1.125rem;\n    margin-top: 0;\n    margin-bottom: 1.25rem;\n    line-height: 1.8rem;\n  }\n\n  a {\n    color: $hwblue;\n  }\n\n  a:hover {\n    text-underline-offset: 0.2rem;\n  }\n\n  img {\n    display: block;\n    max-width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    border-radius: $borderradius;\n  }\n\n  ol {\n    padding-left: 1rem;\n  }\n\n  li {\n    font-weight: 500;\n\n    p {\n      font-weight: 400;\n    }\n  }\n\n  code {\n    font-family: 'IBM Plex Mono', monospace;\n    background-color: $hwlightgrey;\n    border-radius: 0.125rem;\n    padding-left: 0.2rem;\n    padding-right: 0.2rem;\n  }\n}"
	],
	"names": [],
	"mappings": "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"
}